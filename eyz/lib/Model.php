<?php
/**
 * eyz
 * Author: 忆云竹 （eyunzhu.com）
 * GitHub: https://github.com/eyunzhu/eyz
 */
namespace eyz\lib;
class Model
{
    public $table = '';
    public $singletonModel = '';
    public function __construct($table=''){
        try{
            if(static::class  == 'eyz\lib\Model'){//通过 new
                if ($table ==  '')
                    throw new \EyzException('请传入table');
                else
                    $this->table = $table;
            }else{
                $class = substr(basename(str_replace('\\', '/', static::class)),0,-5);
                $this->table = toUnderScore($class);
            }
            $this->singletonModel = SingletonModel::getInstance();//获取单例实例
        }catch (\EyzException $e){
            echo 'error: ' .$e->getMessage();
            exit;
        }
    }
    public function query($query, $map = [])
    {
        return $this->singletonModel->query($query, $map); // TODO: Change the autogenerated stub
    }

    public function exec($query, $map = [])
    {
        return $this->singletonModel->exec($query, $map); // TODO: Change the autogenerated stub
    }

    public function quote($string)
    {
        return $this->singletonModel->quote($string); // TODO: Change the autogenerated stub
    }

    public function create($table, $columns, $options = null)
    {
        return $this->singletonModel->create($table, $columns, $options); // TODO: Change the autogenerated stub
    }

    public function drop($table)
    {
        return $this->singletonModel->drop($table); // TODO: Change the autogenerated stub
    }

    public function select( $join, $columns = null, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->select($table, $join, $columns, $where); // TODO: Change the autogenerated stub
    }

    public function insert( $datas)
    {
        $table = $this->table;
        return $this->singletonModel->insert($table, $datas); // TODO: Change the autogenerated stub
    }

    public function update( $data, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->update($table, $data, $where); // TODO: Change the autogenerated stub
    }

    public function delete( $where)
    {
        $table = $this->table;
        return $this->singletonModel->delete($table, $where); // TODO: Change the autogenerated stub
    }

    public function replace( $columns, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->replace($table, $columns, $where); // TODO: Change the autogenerated stub
    }

    public function get( $join = null, $columns = null, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->get($table, $join, $columns, $where); // TODO: Change the autogenerated stub
    }

    public function has( $join, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->has($table, $join, $where); // TODO: Change the autogenerated stub
    }

    public function rand( $join = null, $columns = null, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->rand($table, $join, $columns, $where); // TODO: Change the autogenerated stub
    }

    public function count( $join = null, $column = null, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->count($table, $join, $column, $where); // TODO: Change the autogenerated stub
    }

    public function avg( $join, $column = null, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->avg($table, $join, $column, $where); // TODO: Change the autogenerated stub
    }

    public function max( $join, $column = null, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->max($table, $join, $column, $where); // TODO: Change the autogenerated stub
    }

    public function min( $join, $column = null, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->min($table, $join, $column, $where); // TODO: Change the autogenerated stub
    }

    public function sum( $join, $column = null, $where = null)
    {
        $table = $this->table;
        return $this->singletonModel->sum($table, $join, $column, $where); // TODO: Change the autogenerated stub
    }

    public function action($actions)
    {
        return $this->singletonModel->action($actions); // TODO: Change the autogenerated stub
    }

    public function id()
    {
        return $this->singletonModel->id(); // TODO: Change the autogenerated stub
    }

    public function debug()
    {
        return $this->singletonModel->debug(); // TODO: Change the autogenerated stub
    }

    public function error()
    {
        return $this->singletonModel->error(); // TODO: Change the autogenerated stub
    }

    public function last()
    {
        return $this->singletonModel->last(); // TODO: Change the autogenerated stub
    }

    public function log()
    {
        return $this->singletonModel->log(); // TODO: Change the autogenerated stub
    }

    public function info()
    {
        return $this->singletonModel->info(); // TODO: Change the autogenerated stub
    }



}